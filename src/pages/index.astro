---
import Icon from "../components/Icon.astro";
import Menu from "../components/menu/Menu.astro";
import { timezoneItemBtn } from "../entities/clockIds";
import CenterHero from "../layouts/CenterHero.astro";
import Page from "../layouts/Page.astro";
---

<Page>
  <CenterHero>
    <div>
      <span
        transition:animate="fade"
        transition:name="clock"
        class="countdown font-mono text-4xl sm:text-8xl md:text-9xl"
      >
        <span class="value-hours" style="--value:00;"></span>:
        <span class="value-minutes" style="--value:00;"></span>:
        <span class="value-seconds" style="--value:00;"></span>
      </span>
    </div>
    <div class="mt-4">
      <button class="timezone-btn font-serif text-xl">
        <span class="timezone-label">America/Guatemala</span>
        <Icon icon="caret" class="inline-block ml-1" />
      </button>
    </div>
    <div
      class="timezone-panel hidden absolute inset-0 w-full h-full bg-base-100 py-24"
    >
      <div class="flex flex-col max-w-lg mx-auto h-full">
        <ul class="timezone-list border-t border-b flex-1 overflow-y-scroll">
        </ul>

        <div class="text-center">
          <button class="cancel-btn btn mt-4 btn-secondary uppercase">
            cancel
          </button>
        </div>
      </div>
    </div>
    <template class="template-timezone-item">
      <li class="text-center">
        <button
          class="btn btn-block btn-ghost"
          class:list={[timezoneItemBtn.name]}></button>
      </li>
    </template>
  </CenterHero>
  <Menu active="clock" />
</Page>

<script>
  import requestAnimationFrames from "request-animation-frames";
  import { r } from "@vyke/results";
  import { getTimeValues } from "../entities/time";
  import dayjs from "dayjs";
  import utc from "dayjs/plugin/utc";
  import tz from "dayjs/plugin/timezone";
  import { hide, query, select, setStyleVar, show } from "../entities/html";
  import { formatTimezone } from "../entities/timezone";

  dayjs.extend(utc);
  dayjs.extend(tz);

  let currentTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;

  const [
    hours,
    minutes,
    seconds,
    timezonePanel,
    timezoneBtn,
    cancelBtn,
    timezoneList,
    templateTimezoneItem,
    timezoneLabel,
  ] = r.unwrap(
    select(
      query<HTMLElement>(".value-hours"),
      query<HTMLElement>(".value-minutes"),
      query<HTMLElement>(".value-seconds"),
      query<HTMLDivElement>(".timezone-panel"),
      query<HTMLButtonElement>(".timezone-btn"),
      query<HTMLButtonElement>(".cancel-btn"),
      query<HTMLUListElement>(".timezone-list"),
      query<HTMLTemplateElement>(".template-timezone-item"),
      query<HTMLSpanElement>(".timezone-label")
    )
  );

  timezoneLabel.textContent = formatTimezone(currentTimezone);

  timezoneBtn.onclick = async () => {
    const result = await r.to(import("../entities/timezoneHandler"));

    if (!result.ok) {
      return;
    }

    const { timezoneHandler } = result.value;
    show(timezonePanel);
    timezoneHandler({
      cancelBtn,
      currentTimezone,
      templateItem: templateTimezoneItem,
      list: timezoneList,
      onClose(value) {
        currentTimezone = value;
        timezoneLabel.textContent = formatTimezone(value);
        hide(timezonePanel);
      },
    });
  };

  for await (const _timestamp of requestAnimationFrames()) {
    const values = getTimeValues(dayjs().tz(currentTimezone));

    setStyleVar(hours, "--value", values.hours);
    setStyleVar(minutes, "--value", values.minutes);
    setStyleVar(seconds, "--value", values.seconds);
  }
</script>
